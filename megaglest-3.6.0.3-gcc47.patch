diff -up megaglest-3.6.0.3/source/shared_lib/sources/util/util.cpp.orig megaglest-3.6.0.3/source/shared_lib/sources/util/util.cpp
--- megaglest-3.6.0.3/source/shared_lib/sources/util/util.cpp.orig	2012-06-01 22:30:40.010942196 -0400
+++ megaglest-3.6.0.3/source/shared_lib/sources/util/util.cpp	2012-06-01 22:31:02.644943155 -0400
@@ -19,6 +19,7 @@
 #include <stdarg.h>
 #include <time.h>
 #include <fcntl.h> // for open()
+#include <unistd.h> // for close()
 
 #ifdef WIN32
   #include <io.h> // for open()
diff -up megaglest-3.6.0.3/source/glest_game/graphics/renderer.cpp.orig megaglest-3.6.0.3/source/glest_game/graphics/renderer.cpp
--- megaglest-3.6.0.3/source/glest_game/graphics/renderer.cpp.orig	2012-06-01 22:43:57.526972758 -0400
+++ megaglest-3.6.0.3/source/glest_game/graphics/renderer.cpp	2012-06-01 22:44:39.149974319 -0400
@@ -5939,10 +5939,10 @@ void Renderer::selectUsingColorPicking(S
 	int x2 = posUp.x;
 	int y2 = posUp.y;
 
-	int x = min(x1,x2);
-	int y = min(y1,y2);
-	int w = max(x1,x2) - min(x1,x2);
-	int h = max(y1,y2) - min(y1,y2);
+	int x = std::min(x1,x2);
+	int y = std::min(y1,y2);
+	int w = std::max(x1,x2) - std::min(x1,x2);
+	int h = std::max(y1,y2) - std::min(y1,y2);
 	if(w < 1) {
 		w = 1;
 	}
diff -up megaglest-3.6.0.3/source/shared_lib/include/graphics/math_util.h.orig megaglest-3.6.0.3/source/shared_lib/include/graphics/math_util.h
--- megaglest-3.6.0.3/source/shared_lib/include/graphics/math_util.h.orig	2012-06-01 22:46:28.742978567 -0400
+++ megaglest-3.6.0.3/source/shared_lib/include/graphics/math_util.h	2012-06-01 22:46:30.740978527 -0400
@@ -184,10 +184,10 @@ public:
 
 	Rect2<T> computeBoundingRect() const{
 		return Rect2i(
-			min(p[0].x, p[1].x), 
-			min(p[0].y, p[2].y), 
-			max(p[2].x, p[3].x), 
-			max(p[1].y, p[3].y));
+			std::min(p[0].x, p[1].x), 
+			std::min(p[0].y, p[2].y), 
+			std::max(p[2].x, p[3].x), 
+			std::max(p[1].y, p[3].y));
 	}
 
 	bool isInside(const Vec2<T> &pt) const{
